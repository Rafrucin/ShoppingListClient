@page "/bulkadd"
@inject NavigationManager _nav
@inject IHelpers helper
@inject IProductServices services

<h3>Bulk Add</h3>

<div>
    <EditForm Model="stringCatch" OnValidSubmit="ProcessBulk">
        <p>Please separate your products with commas</p>
        <InputTextArea class="col" rows="5"
                       placeholder="Comma Separated Products" @bind-Value="productText" />
        <button type="submit" disabled="@IsBusy" class="btn btn-block btn-danger" >Submit</button>
    </EditForm>
</div>



@code {

    string productText;
    StringCatch stringCatch = new StringCatch();
    List<ProductModel> productsToAdd = new List<ProductModel>();
    List<ProductModel> AllProducts;

    bool IsBusy = true;

    protected async override Task OnInitializedAsync()
    {
        AllProducts = await services.GetAllProducts();
        IsBusy = false;
    }



    async Task ProcessBulk()
    {
        if (productText==null)
        {
            return;
        }
        IsBusy = true;
        // initialize getallproduct and send something ready.
        string[] products = productText.Split(',');
        List<ProductModel> productsToAdd = new List<ProductModel>();
        foreach (string p in products)
        {
            ProductModel model = new ProductModel();
            var pt= p.Trim();
            if (pt.Length>2)
            {
                model.Name = pt;
                model.Department = StoreDepartments.other;
                productsToAdd.Add(model);
            }
        }
        await helper.BulkAdd(AllProducts, productsToAdd);
        _nav.NavigateTo("/order");
    }
}
